package br.com.cwi.crescer;

import java.util.ArrayList;
import java.util.List;

import br.com.cwi.crescer.LinkedList.Node;

public class DoublyLinkedList extends LinkedList {

    private Node last, first;

    public void addFirst(String value) {
        Node node = new Node(value, null);

        if (first == null) {
            last = node;
        }
        node.setNext(first);
        first = node;
    }

    public void addLast(String value) {
        Node node = new Node(value, null);

        if (first == null) {
            first = node;
        }
        node.setNext(last);
        last = node;
    }

    public String getFirst() {
        return first.getValue();
    }

    public String getLast() {
        return last.getValue();
    }

    public List<String> list() {
        ArrayList<String> lista = new ArrayList<String>();
        Node node = first;

        while (node != null) {
            lista.add(node.getValue());
            node = node.getNext();
        }

        return lista;
    }

    public void removeFirst() {
        first = first.getNext();
    }

    public void remove(int index) {
        getNode(index - 1).setNext(getNode(index).getNext());
    }

    public void add(int index, String value) {
        getNode(index - 1).setNext(new Node(value, getNode(index)));
    }

    public Node getNode(int index) {
        Node node = first;

        for (int i = 0; i < index; i++) {
            node = node.getNext();
        }

        return node;
    }

    protected class Node {
        
        private Node previous;
        
        public Node(String value, Node next, Node previous) {
            super();
            this.previous = previous;
        }

    }
    
}
